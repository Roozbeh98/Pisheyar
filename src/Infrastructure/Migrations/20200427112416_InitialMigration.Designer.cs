// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pisheyar.Infrastructure.Persistence;

namespace Pisheyar.Infrastructure.Migrations
{
    [DbContext(typeof(PisheyarContext))]
    [Migration("20200427112416_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pisheyar.Domain.Entities.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AdminID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("AdminGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AdminGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("AdminId");

                    b.HasIndex("UserId");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Advertisement", b =>
                {
                    b.Property<int>("AdvertisementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AdvertisementID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("AdvertisementGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AdvertisementGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentId")
                        .HasColumnName("DocumentID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsShow")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdvertisementId");

                    b.HasIndex("DocumentId");

                    b.ToTable("Advertisement");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CategoryID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CategoryGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CategoryGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnName("ParentCategoryID")
                        .HasColumnType("int");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.CategoryTag", b =>
                {
                    b.Property<int>("CategoryTagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CategoryTagID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnName("CategoryID")
                        .HasColumnType("int");

                    b.Property<Guid>("CategoryTagGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CategoryTagGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("TagId")
                        .HasColumnName("TagID")
                        .HasColumnType("int");

                    b.HasKey("CategoryTagId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TagId");

                    b.ToTable("CategoryTag");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.ChatMessage", b =>
                {
                    b.Property<int>("ChatMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ChatMessageID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ChatMessageGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ChatMessageGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("ChatRoomId")
                        .HasColumnName("ChatRoomID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsSeen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("SentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("ChatMessageId");

                    b.HasIndex("ChatRoomId");

                    b.ToTable("ChatMessage");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.ChatRoom", b =>
                {
                    b.Property<int>("ChatRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ChatRoomID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ChatRoomGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ChatRoomGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("ClientId")
                        .HasColumnName("ClientID")
                        .HasColumnType("int");

                    b.Property<int>("ContractorId")
                        .HasColumnName("ContractorID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("OrderId")
                        .HasColumnName("OrderID")
                        .HasColumnType("int");

                    b.Property<string>("OwnerConnectionId")
                        .IsRequired()
                        .HasColumnName("OwnerConnectionID")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("ChatRoomId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ContractorId");

                    b.HasIndex("OrderId");

                    b.ToTable("ChatRoom");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClientID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ClientGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClientGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("ClientId");

                    b.HasIndex("UserId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Code", b =>
                {
                    b.Property<int>("CodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CodeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodeGroupId")
                        .HasColumnName("CodeGroupID")
                        .HasColumnType("int");

                    b.Property<Guid>("CodeGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CodeGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("CodeId");

                    b.HasIndex("CodeGroupId")
                        .HasName("IX_Tbl_Code_Code_CGID");

                    b.ToTable("Code");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.CodeGroup", b =>
                {
                    b.Property<int>("CodeGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CodeGroupID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CodeGroupGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CodeGroupGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("CodeGroupId");

                    b.ToTable("CodeGroup");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CommentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CommentGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CommentGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("UserId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Contractor", b =>
                {
                    b.Property<int>("ContractorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ContractorID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ContractorGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ContractorGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<long>("Credit")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("ContractorId");

                    b.HasIndex("UserId");

                    b.ToTable("Contractor");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DocumentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("DocumentGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DocumentGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<int>("TypeCodeId")
                        .HasColumnName("TypeCodeID")
                        .HasColumnType("int");

                    b.HasKey("DocumentId");

                    b.HasIndex("TypeCodeId")
                        .HasName("IX_Tbl_Document_Document_TypeCodeID");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrderID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnName("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnName("ClientID")
                        .HasColumnType("int");

                    b.Property<int>("ContractorId")
                        .HasColumnName("ContractorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeadlineDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("OrderGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrderGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("StateCodeId")
                        .HasColumnName("StateCodeID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ContractorId");

                    b.HasIndex("StateCodeId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.OrderRequest", b =>
                {
                    b.Property<int>("OrderRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrderRequestID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContractorId")
                        .HasColumnName("ContractorID")
                        .HasColumnType("int");

                    b.Property<bool>("IsAccept")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OrderId")
                        .HasColumnName("OrderID")
                        .HasColumnType("int");

                    b.Property<Guid>("OrderRequestGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrderRequestGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("OrderRequestId");

                    b.HasIndex("ContractorId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderRequest");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PermissionID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("PermissionGroupId")
                        .HasColumnName("PermissionGroupID")
                        .HasColumnType("int");

                    b.Property<Guid>("PermissionGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PermissionGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("PermissionId");

                    b.HasIndex("PermissionGroupId");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.PermissionGroup", b =>
                {
                    b.Property<int>("PermissionGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PermissionGroupID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<Guid>("PermissionGroupGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PermissionGroupGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("PermissionGroupId");

                    b.ToTable("PermissionGroup");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PostID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abstract")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentId")
                        .HasColumnName("DocumentID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsShow")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("LikeCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("PostGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PostGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("PostId");

                    b.HasIndex("DocumentId");

                    b.HasIndex("UserId");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.PostCategory", b =>
                {
                    b.Property<int>("PostCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PostCategoryID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnName("CategoryID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("PostCategoryGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PostCategoryGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("PostId")
                        .HasColumnName("PostID")
                        .HasColumnType("int");

                    b.HasKey("PostCategoryId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PostId");

                    b.ToTable("PostCategory");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.PostComment", b =>
                {
                    b.Property<int>("PostCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PostCommentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommentId")
                        .HasColumnName("CommentID")
                        .HasColumnType("int");

                    b.Property<bool>("IsAccept")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("PostCommentGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PostCommentGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("PostId")
                        .HasColumnName("PostID")
                        .HasColumnType("int");

                    b.HasKey("PostCommentId");

                    b.HasIndex("CommentId");

                    b.HasIndex("PostId");

                    b.ToTable("PostComment");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.PostTag", b =>
                {
                    b.Property<int>("PostTagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PostTagID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PostId")
                        .HasColumnName("PostID")
                        .HasColumnType("int");

                    b.Property<Guid>("PostTagGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PostTagGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("TagId")
                        .HasColumnName("TagID")
                        .HasColumnType("int");

                    b.HasKey("PostTagId");

                    b.HasIndex("PostId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTag");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<Guid>("RoleGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.RolePermission", b =>
                {
                    b.Property<int>("RolePermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RolePermissionID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PermissionId")
                        .HasColumnName("PermissionID")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnName("RoleID")
                        .HasColumnType("int");

                    b.Property<Guid>("RolePermissionGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RolePermissionGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("RolePermissionId");

                    b.HasIndex("PermissionId")
                        .HasName("IX_Tbl_RolePermission_RP_PermissionID");

                    b.HasIndex("RoleId")
                        .HasName("IX_Tbl_RolePermission_RP_RoleID");

                    b.ToTable("RolePermission");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.SmsProviderConfiguration", b =>
                {
                    b.Property<int>("SmsProviderConfigurationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMSProviderConfigurationID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apikey")
                        .IsRequired()
                        .HasColumnName("APIKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<Guid>("SmsProviderConfigurationGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMSProviderConfigurationGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("SmsProviderConfigurationId");

                    b.ToTable("SMSProviderConfiguration");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.SmsProviderNumber", b =>
                {
                    b.Property<int>("SmsProviderNumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMSProviderNumberID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("SmsProviderConfigurationId")
                        .HasColumnName("SMSProviderConfigurationID")
                        .HasColumnType("int");

                    b.Property<Guid>("SmsProviderNumberGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMSProviderNumberGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("SmsProviderNumberId");

                    b.HasIndex("SmsProviderConfigurationId")
                        .HasName("IX_Tbl_SMSProviderNumber_SPN_SPCID");

                    b.ToTable("SMSProviderNumber");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.SmsResponse", b =>
                {
                    b.Property<int>("SmsResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMSResponseID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Receptor")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime>("SentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("SmsResponseGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMSResponseGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SmsTemplateId")
                        .HasColumnName("SMSTemplateID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Token1")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Token2")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("SmsResponseId");

                    b.HasIndex("SmsTemplateId")
                        .HasName("IX_Tbl_SMSResponse_SMS_STID");

                    b.HasIndex("UserId");

                    b.ToTable("SMSResponse");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.SmsSetting", b =>
                {
                    b.Property<int>("SmsSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMSSettingID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("SmsProviderConfigurationId")
                        .HasColumnName("SMSProviderConfigurationID")
                        .HasColumnType("int");

                    b.Property<Guid>("SmsSettingGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMSSettingGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("SmsSettingId");

                    b.HasIndex("SmsProviderConfigurationId")
                        .HasName("IX_Tbl_SMSSetting_SS_SPCID");

                    b.ToTable("SMSSetting");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.SmsTemplate", b =>
                {
                    b.Property<int>("SmsTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMSTemplateID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("SmsSettingId")
                        .HasColumnName("SMSSettingID")
                        .HasColumnType("int");

                    b.Property<Guid>("SmsTemplateGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMSTemplateGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("SmsTemplateId");

                    b.HasIndex("SmsSettingId")
                        .HasName("IX_Tbl_SMSTemplate_ST_SSID");

                    b.ToTable("SMSTemplate");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TagID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<Guid>("TagGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TagGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("Usage")
                        .HasColumnType("int");

                    b.HasKey("TagId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Token", b =>
                {
                    b.Property<int>("TokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TokenID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExpireDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("TokenGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TokenGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("TokenId");

                    b.HasIndex("UserId");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TransactionID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Cost")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<Guid>("TransactionGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TransactionGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("TypeCodeId")
                        .HasColumnName("TypeCodeID")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.HasIndex("TypeCodeId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsRegister")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime>("RegisteredDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RoleId")
                        .HasColumnName("RoleID")
                        .HasColumnType("int");

                    b.Property<Guid>("UserGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.UserPermission", b =>
                {
                    b.Property<int>("UserPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserPermissionID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PermissionId")
                        .HasColumnName("PermissionID")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.Property<Guid>("UserPermissionGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserPermissionGUID")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("UserPermissionId");

                    b.HasIndex("PermissionId")
                        .HasName("IX_Tbl_UserPermission_UP_PermissionID");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermission");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Admin", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.User", "User")
                        .WithMany("Admin")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Admin_User")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Advertisement", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.Document", "Document")
                        .WithMany("Advertisement")
                        .HasForeignKey("DocumentId")
                        .HasConstraintName("FK_Advertisement_Document")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Category", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.Category", "ParentCategory")
                        .WithMany("InverseParentCategory")
                        .HasForeignKey("ParentCategoryId")
                        .HasConstraintName("FK_Category_Category");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.CategoryTag", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.Category", "Category")
                        .WithMany("CategoryTag")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_CategoryTag_Category")
                        .IsRequired();

                    b.HasOne("Pisheyar.Domain.Entities.Tag", "Tag")
                        .WithMany("CategoryTag")
                        .HasForeignKey("TagId")
                        .HasConstraintName("FK_CategoryTag_Tag")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.ChatMessage", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.ChatRoom", "ChatRoom")
                        .WithMany("ChatMessage")
                        .HasForeignKey("ChatRoomId")
                        .HasConstraintName("FK_ChatMessage_ChatRoom")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.ChatRoom", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.Client", "Client")
                        .WithMany("ChatRoom")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_ChatRoom_Client")
                        .IsRequired();

                    b.HasOne("Pisheyar.Domain.Entities.Contractor", "Contractor")
                        .WithMany("ChatRoom")
                        .HasForeignKey("ContractorId")
                        .HasConstraintName("FK_ChatRoom_Contractor")
                        .IsRequired();

                    b.HasOne("Pisheyar.Domain.Entities.Order", "Order")
                        .WithMany("ChatRoom")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_ChatRoom_Order")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Client", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.User", "User")
                        .WithMany("Client")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Client_User")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Code", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.CodeGroup", "CodeGroup")
                        .WithMany("Code")
                        .HasForeignKey("CodeGroupId")
                        .HasConstraintName("FK_Code_CodeGroup")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Comment", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.User", "User")
                        .WithMany("Comment")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Comment_User")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Contractor", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.User", "User")
                        .WithMany("Contractor")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Contractor_User")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Document", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.Code", "TypeCode")
                        .WithMany("Document")
                        .HasForeignKey("TypeCodeId")
                        .HasConstraintName("FK_Document_Code")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Order", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.Category", "Category")
                        .WithMany("Order")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Order_Category")
                        .IsRequired();

                    b.HasOne("Pisheyar.Domain.Entities.Client", "Client")
                        .WithMany("Order")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_Order_Client")
                        .IsRequired();

                    b.HasOne("Pisheyar.Domain.Entities.Contractor", "Contractor")
                        .WithMany("Order")
                        .HasForeignKey("ContractorId")
                        .HasConstraintName("FK_Order_Contractor")
                        .IsRequired();

                    b.HasOne("Pisheyar.Domain.Entities.Code", "StateCode")
                        .WithMany("Order")
                        .HasForeignKey("StateCodeId")
                        .HasConstraintName("FK_Order_Code")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.OrderRequest", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.Contractor", "Contractor")
                        .WithMany("OrderRequest")
                        .HasForeignKey("ContractorId")
                        .HasConstraintName("FK_OrderRequest_Contractor")
                        .IsRequired();

                    b.HasOne("Pisheyar.Domain.Entities.Order", "Order")
                        .WithMany("OrderRequest")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_OrderRequest_Order")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Permission", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.PermissionGroup", "PermissionGroup")
                        .WithMany("Permission")
                        .HasForeignKey("PermissionGroupId")
                        .HasConstraintName("FK_Permission_PermissionGroup")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Post", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.Document", "Document")
                        .WithMany("Post")
                        .HasForeignKey("DocumentId")
                        .HasConstraintName("FK_Post_Document")
                        .IsRequired();

                    b.HasOne("Pisheyar.Domain.Entities.User", "User")
                        .WithMany("Post")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Post_User")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.PostCategory", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.Category", "Category")
                        .WithMany("PostCategory")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_PostCategory_Category")
                        .IsRequired();

                    b.HasOne("Pisheyar.Domain.Entities.Post", "Post")
                        .WithMany("PostCategory")
                        .HasForeignKey("PostId")
                        .HasConstraintName("FK_PostCategory_Post")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.PostComment", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.Comment", "Comment")
                        .WithMany("PostComment")
                        .HasForeignKey("CommentId")
                        .HasConstraintName("FK_PostComment_Comment")
                        .IsRequired();

                    b.HasOne("Pisheyar.Domain.Entities.Post", "Post")
                        .WithMany("PostComment")
                        .HasForeignKey("PostId")
                        .HasConstraintName("FK_PostComment_Post")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.PostTag", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.Post", "Post")
                        .WithMany("PostTag")
                        .HasForeignKey("PostId")
                        .HasConstraintName("FK_PostTag_Post")
                        .IsRequired();

                    b.HasOne("Pisheyar.Domain.Entities.Tag", "Tag")
                        .WithMany("PostTag")
                        .HasForeignKey("TagId")
                        .HasConstraintName("FK_PostTag_Tag")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.RolePermission", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.Permission", "Permission")
                        .WithMany("RolePermission")
                        .HasForeignKey("PermissionId")
                        .HasConstraintName("FK_RolePermission_Permission")
                        .IsRequired();

                    b.HasOne("Pisheyar.Domain.Entities.Role", "Role")
                        .WithMany("RolePermission")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_RolePermission_Role")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.SmsProviderNumber", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.SmsProviderConfiguration", "SmsProviderConfiguration")
                        .WithMany("SmsProviderNumber")
                        .HasForeignKey("SmsProviderConfigurationId")
                        .HasConstraintName("FK_SMSProviderNumber_SMSProviderConfiguration")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.SmsResponse", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.SmsTemplate", "SmsTemplate")
                        .WithMany("SmsResponse")
                        .HasForeignKey("SmsTemplateId")
                        .HasConstraintName("FK_SMSResponse_SMSTemplate");

                    b.HasOne("Pisheyar.Domain.Entities.User", "User")
                        .WithMany("SmsResponse")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_SMSResponse_User")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.SmsSetting", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.SmsProviderConfiguration", "SmsProviderConfiguration")
                        .WithMany("SmsSetting")
                        .HasForeignKey("SmsProviderConfigurationId")
                        .HasConstraintName("FK_SMSSetting_SMSProviderConfiguration")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.SmsTemplate", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.SmsSetting", "SmsSetting")
                        .WithMany("SmsTemplate")
                        .HasForeignKey("SmsSettingId")
                        .HasConstraintName("FK_SMSTemplate_SMSSetting")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Token", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.User", "User")
                        .WithMany("Token")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Token_User")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.Code", "TypeCode")
                        .WithMany("Transaction")
                        .HasForeignKey("TypeCodeId")
                        .HasConstraintName("FK_Transaction_Code")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.User", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_User_Role")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.UserPermission", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.Permission", "Permission")
                        .WithMany("UserPermission")
                        .HasForeignKey("PermissionId")
                        .HasConstraintName("FK_UserPermission_Permission")
                        .IsRequired();

                    b.HasOne("Pisheyar.Domain.Entities.User", "User")
                        .WithMany("UserPermission")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserPermission_User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
