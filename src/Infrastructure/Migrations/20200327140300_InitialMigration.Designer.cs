// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pisheyar.Infrastructure.Persistence;

namespace Pisheyar.Infrastructure.Migrations
{
    [DbContext(typeof(PisheyarMagContext))]
    [Migration("20200327140300_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblAdvertisement", b =>
                {
                    b.Property<int>("AdvertisementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Advertisement_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdvertisementAbstract")
                        .IsRequired()
                        .HasColumnName("Advertisement_Abstract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AdvertisementCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Advertisement_CreateDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AdvertisementDocumentId")
                        .HasColumnName("Advertisement_DocumentID")
                        .HasColumnType("int");

                    b.Property<Guid>("AdvertisementGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Advertisement_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("AdvertisementIsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Advertisement_IsDelete")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("AdvertisementIsShow")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Advertisement_IsShow")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("AdvertisementModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Advertisement_ModifyDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("AdvertisementTitle")
                        .IsRequired()
                        .HasColumnName("Advertisement_Title")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("AvertisementPicture")
                        .IsRequired()
                        .HasColumnName("Avertisement_Picture")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.HasKey("AdvertisementId");

                    b.HasIndex("AdvertisementDocumentId");

                    b.ToTable("Tbl_Advertisement");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblCategory", b =>
                {
                    b.Property<Guid>("CategoryGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Category_Guid")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid?>("CategoryCategoryGuid")
                        .HasColumnName("Category_CategoryGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CategoryCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Category_CreateDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CategoryDisplay")
                        .IsRequired()
                        .HasColumnName("Category_Display")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<bool>("CategoryIsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Category_IsDelete")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("CategoryModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Category_ModifyDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CategoryOrder")
                        .HasColumnName("Category_Order")
                        .HasColumnType("int");

                    b.HasKey("CategoryGuid");

                    b.HasIndex("CategoryCategoryGuid");

                    b.ToTable("Tbl_Category");

                    b.HasData(
                        new
                        {
                            CategoryGuid = new Guid("f1b77c7c-dd98-428a-89fc-bb1f62718f3c"),
                            CategoryCreateDate = new DateTime(2020, 3, 27, 18, 32, 59, 530, DateTimeKind.Local).AddTicks(9600),
                            CategoryDisplay = "سایت اصلی",
                            CategoryIsDelete = false,
                            CategoryModifyDate = new DateTime(2020, 3, 27, 18, 32, 59, 531, DateTimeKind.Local).AddTicks(137),
                            CategoryOrder = 1
                        },
                        new
                        {
                            CategoryGuid = new Guid("d3bde41a-7a98-4fe3-a18b-ce8962a61beb"),
                            CategoryCreateDate = new DateTime(2020, 3, 27, 18, 32, 59, 531, DateTimeKind.Local).AddTicks(1240),
                            CategoryDisplay = "وبلاگ",
                            CategoryIsDelete = false,
                            CategoryModifyDate = new DateTime(2020, 3, 27, 18, 32, 59, 531, DateTimeKind.Local).AddTicks(1266),
                            CategoryOrder = 2
                        });
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblCategoryTag", b =>
                {
                    b.Property<int>("CtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CT_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("CtCategoryGuid")
                        .HasColumnName("CT_CategoryGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CtGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CT_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("CtTagId")
                        .HasColumnName("CT_TagID")
                        .HasColumnType("int");

                    b.HasKey("CtId");

                    b.HasIndex("CtCategoryGuid");

                    b.HasIndex("CtTagId");

                    b.ToTable("Tbl_CategoryTag");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblCode", b =>
                {
                    b.Property<int>("CodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Code_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodeCgid")
                        .HasColumnName("Code_CGID")
                        .HasColumnType("int");

                    b.Property<string>("CodeDisplay")
                        .IsRequired()
                        .HasColumnName("Code_Display")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<Guid>("CodeGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Code_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("CodeIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Code_IsActive")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("CodeName")
                        .IsRequired()
                        .HasColumnName("Code_Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("CodeId");

                    b.ToTable("Tbl_Code");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblCodeGroup", b =>
                {
                    b.Property<int>("CgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CG_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CgCodeId")
                        .HasColumnName("CG_CodeID")
                        .HasColumnType("int");

                    b.Property<string>("CgDisplay")
                        .IsRequired()
                        .HasColumnName("CG_Display")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<Guid>("CgGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CG_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CgName")
                        .IsRequired()
                        .HasColumnName("CG_Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("CgId");

                    b.HasIndex("CgCodeId");

                    b.ToTable("Tbl_CodeGroup");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblComment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Comment_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CommentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Comment_Date")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("CommentGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Comment_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnName("Comment_Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommentUserId")
                        .HasColumnName("Comment_UserID")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("CommentUserId");

                    b.ToTable("Tbl_Comment");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblDocument", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Document_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DocumentCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Document_CreateDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DocumentFileName")
                        .IsRequired()
                        .HasColumnName("Document_FileName")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<Guid>("DocumentGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Document_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("DocumentIsDelete")
                        .HasColumnName("Document_IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DocumentModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Document_ModifyDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DocumentPath")
                        .IsRequired()
                        .HasColumnName("Document_Path")
                        .HasColumnType("nvarchar(512)")
                        .HasMaxLength(512);

                    b.Property<int>("DocumentTypeCodeId")
                        .HasColumnName("Document_TypeCodeID")
                        .HasColumnType("int");

                    b.HasKey("DocumentId");

                    b.HasIndex("DocumentTypeCodeId");

                    b.ToTable("Tbl_Document");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblPermission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Permission_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("PermissionCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Permission_CreateDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PermissionDisplay")
                        .IsRequired()
                        .HasColumnName("Permission_Display")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<Guid>("PermissionGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Permission_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("PermissionIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Permission_IsActive")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("PermissionIsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Permission_IsDelete")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("PermissionModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Permission_ModifyDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnName("Permission_Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("PermissionId");

                    b.ToTable("Tbl_Permission");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblPost", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Post_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PostAbstract")
                        .IsRequired()
                        .HasColumnName("Post_Abstract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Post_CreateDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PostDescription")
                        .IsRequired()
                        .HasColumnName("Post_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostDocumentId")
                        .HasColumnName("Post_DocumentID")
                        .HasColumnType("int");

                    b.Property<Guid>("PostGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Post_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("PostIsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Post_IsDelete")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("PostIsShow")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Post_IsShow")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("PostLikeCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Post_LikeCount")
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("PostModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Post_ModifyDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PostTitle")
                        .IsRequired()
                        .HasColumnName("Post_Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostUserId")
                        .HasColumnName("Post_UserID")
                        .HasColumnType("int");

                    b.Property<int>("PostViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Post_ViewCount")
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("PostId");

                    b.HasIndex("PostDocumentId");

                    b.HasIndex("PostUserId");

                    b.ToTable("Tbl_Post");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblPostCategory", b =>
                {
                    b.Property<int>("PcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PC_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("PcCategoryGuid")
                        .HasColumnName("PC_CategoryGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PcGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PC_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("PcPostId")
                        .HasColumnName("PC_PostID")
                        .HasColumnType("int");

                    b.HasKey("PcId");

                    b.HasIndex("PcCategoryGuid");

                    b.HasIndex("PcPostId");

                    b.ToTable("Tbl_PostCategory");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblPostComment", b =>
                {
                    b.Property<int>("PcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PC_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PcCommentId")
                        .HasColumnName("PC_CommentID")
                        .HasColumnType("int");

                    b.Property<Guid>("PcGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PC_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("PcIsAccept")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PC_IsAccept")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("PcPostId")
                        .HasColumnName("PC_PostID")
                        .HasColumnType("int");

                    b.HasKey("PcId");

                    b.HasIndex("PcCommentId");

                    b.HasIndex("PcPostId");

                    b.ToTable("Tbl_PostComment");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblPostTag", b =>
                {
                    b.Property<int>("PtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PT_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("PtGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PT_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("PtPostId")
                        .HasColumnName("PT_PostID")
                        .HasColumnType("int");

                    b.Property<int>("PtTagId")
                        .HasColumnName("PT_TagID")
                        .HasColumnType("int");

                    b.HasKey("PtId");

                    b.HasIndex("PtPostId");

                    b.HasIndex("PtTagId");

                    b.ToTable("Tbl_PostTag");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Role_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("RoleCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Role_CreateDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RoleDisplay")
                        .IsRequired()
                        .HasColumnName("Role_Display")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<Guid>("RoleGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Role_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("RoleIsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Role_IsDelete")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("RoleModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Role_ModifyDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnName("Role_Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("RoleId");

                    b.ToTable("Tbl_Role");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleCreateDate = new DateTime(2020, 3, 27, 18, 32, 59, 528, DateTimeKind.Local).AddTicks(9273),
                            RoleDisplay = "کاربر عادی",
                            RoleGuid = new Guid("535f6b9b-f6be-4ab6-8436-c549d5f88d4e"),
                            RoleIsDelete = false,
                            RoleModifyDate = new DateTime(2020, 3, 27, 18, 32, 59, 528, DateTimeKind.Local).AddTicks(9822),
                            RoleName = "User"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleCreateDate = new DateTime(2020, 3, 27, 18, 32, 59, 529, DateTimeKind.Local).AddTicks(866),
                            RoleDisplay = "ادمین",
                            RoleGuid = new Guid("7cf7797c-45b1-4054-9a52-ed9b9f2c6319"),
                            RoleIsDelete = false,
                            RoleModifyDate = new DateTime(2020, 3, 27, 18, 32, 59, 529, DateTimeKind.Local).AddTicks(886),
                            RoleName = "Admin"
                        });
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblRolePermission", b =>
                {
                    b.Property<int>("RpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RP_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("RpCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RP_CreateDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RpGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RP_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("RpIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RP_IsActive")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("RpIsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RP_IsDelete")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("RpModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RP_ModifyDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RpPermissionId")
                        .HasColumnName("RP_PermissionID")
                        .HasColumnType("int");

                    b.Property<int>("RpRoleId")
                        .HasColumnName("RP_RoleID")
                        .HasColumnType("int");

                    b.HasKey("RpId");

                    b.HasIndex("RpPermissionId");

                    b.HasIndex("RpRoleId");

                    b.ToTable("Tbl_RolePermission");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblSmsproviderConfiguration", b =>
                {
                    b.Property<int>("SpcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SPC_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SpcApiKey")
                        .IsRequired()
                        .HasColumnName("SPC_ApiKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<DateTime>("SpcCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SPC_CreateDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("SpcGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SPC_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("SpcIsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SPC_IsDelete")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("SpcModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SPC_ModifyDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SpcPassword")
                        .IsRequired()
                        .HasColumnName("SPC_Password")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("SpcUsername")
                        .IsRequired()
                        .HasColumnName("SPC_Username")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("SpcId");

                    b.ToTable("Tbl_SMSProviderConfiguration");

                    b.HasData(
                        new
                        {
                            SpcId = 1,
                            SpcApiKey = "61726634455053586E44464E413462574A76535677436B547236574B56386D6A6F6E4F326A374A4C7755773D",
                            SpcCreateDate = new DateTime(2020, 3, 27, 18, 32, 59, 520, DateTimeKind.Local).AddTicks(155),
                            SpcGuid = new Guid("2193d749-f719-4459-9ea8-78895f1fef2e"),
                            SpcIsDelete = false,
                            SpcModifyDate = new DateTime(2020, 3, 27, 18, 32, 59, 523, DateTimeKind.Local).AddTicks(9215),
                            SpcPassword = "ptcoptco",
                            SpcUsername = "ptmgroupco@gmail.com"
                        });
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblSmsproviderNumber", b =>
                {
                    b.Property<int>("SpnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SPN_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("SpnCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SPN_CreateDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("SpnGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SPN_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("SpnIsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SPN_IsDelete")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("SpnModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SPN_ModifyDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SpnNumber")
                        .IsRequired()
                        .HasColumnName("SPN_Number")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("SpnSpcid")
                        .HasColumnName("SPN_SPCID")
                        .HasColumnType("int");

                    b.HasKey("SpnId");

                    b.HasIndex("SpnSpcid");

                    b.ToTable("Tbl_SMSProviderNumber");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblSmsresponse", b =>
                {
                    b.Property<int>("SmsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMS_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SmsCost")
                        .HasColumnName("SMS_Cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("SmsCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMS_CreateDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("SmsDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMS_Date")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("SmsGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMS_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("SmsIsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMS_IsDelete")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SmsMessage")
                        .IsRequired()
                        .HasColumnName("SMS_Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SmsModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SMS_ModifyDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SmsReceptor")
                        .IsRequired()
                        .HasColumnName("SMS_Receptor")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("SmsSender")
                        .IsRequired()
                        .HasColumnName("SMS_Sender")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("SmsStatus")
                        .HasColumnName("SMS_Status")
                        .HasColumnType("int");

                    b.Property<string>("SmsStatusText")
                        .IsRequired()
                        .HasColumnName("SMS_StatusText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SmsStid")
                        .HasColumnName("SMS_STID")
                        .HasColumnType("int");

                    b.Property<string>("SmsToken")
                        .HasColumnName("SMS_Token")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("SmsToken1")
                        .HasColumnName("SMS_Token1")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("SmsToken2")
                        .HasColumnName("SMS_Token2")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int?>("SmsUserId")
                        .HasColumnName("SMS_UserID")
                        .HasColumnType("int");

                    b.HasKey("SmsId");

                    b.HasIndex("SmsStid");

                    b.HasIndex("SmsUserId");

                    b.ToTable("Tbl_SMSResponse");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblSmssetting", b =>
                {
                    b.Property<int>("SsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SS_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("SsCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SS_CreateDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("SsGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SS_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("SsIsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SS_IsDelete")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("SsModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SS_ModifyDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SsName")
                        .IsRequired()
                        .HasColumnName("SS_Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("SsSpcid")
                        .HasColumnName("SS_SPCID")
                        .HasColumnType("int");

                    b.HasKey("SsId");

                    b.HasIndex("SsSpcid");

                    b.ToTable("Tbl_SMSSetting");

                    b.HasData(
                        new
                        {
                            SsId = 1,
                            SsCreateDate = new DateTime(2020, 3, 27, 18, 32, 59, 527, DateTimeKind.Local).AddTicks(2839),
                            SsGuid = new Guid("995ed660-7d46-4098-bb31-b0b38839e62e"),
                            SsIsDelete = false,
                            SsModifyDate = new DateTime(2020, 3, 27, 18, 32, 59, 527, DateTimeKind.Local).AddTicks(3793),
                            SsName = "Kavenegar",
                            SsSpcid = 1
                        });
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblSmstemplate", b =>
                {
                    b.Property<int>("StId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ST_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("StCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ST_CreateDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("StGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ST_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("StIsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ST_IsDelete")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("StModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ST_ModifyDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("StName")
                        .IsRequired()
                        .HasColumnName("ST_Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("StSsid")
                        .HasColumnName("ST_SSID")
                        .HasColumnType("int");

                    b.HasKey("StId");

                    b.HasIndex("StSsid");

                    b.ToTable("Tbl_SMSTemplate");

                    b.HasData(
                        new
                        {
                            StId = 1,
                            StCreateDate = new DateTime(2020, 3, 27, 18, 32, 59, 528, DateTimeKind.Local).AddTicks(910),
                            StGuid = new Guid("03e5d887-3651-417a-a5ff-b82941615e3b"),
                            StIsDelete = false,
                            StModifyDate = new DateTime(2020, 3, 27, 18, 32, 59, 528, DateTimeKind.Local).AddTicks(1454),
                            StName = "VerifyAccount",
                            StSsid = 1
                        });
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblTag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tag_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("TagCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tag_CreateDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("TagGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tag_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("TagIsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tag_IsDelete")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("TagModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tag_ModifyDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnName("Tag_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TagUsage")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tag_Usage")
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("TagId");

                    b.ToTable("Tbl_Tag");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("User_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("UserCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("User_CreateDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnName("User_Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("UserFamily")
                        .IsRequired()
                        .HasColumnName("User_Family")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<Guid>("UserGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("User_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("UserIsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("User_IsActive")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("UserIsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("User_IsDelete")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("UserMobile")
                        .IsRequired()
                        .HasColumnName("User_Mobile")
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<DateTime>("UserModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("User_ModifyDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("User_Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("UserRoleId")
                        .HasColumnName("User_RoleID")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Tbl_User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            UserCreateDate = new DateTime(2020, 3, 27, 18, 32, 59, 530, DateTimeKind.Local).AddTicks(816),
                            UserEmail = "mahdiroudaki@hotmail.com",
                            UserFamily = "Roudaki",
                            UserGuid = new Guid("80e78a66-d617-44f2-8a77-c533bc73419a"),
                            UserIsActive = true,
                            UserIsDelete = false,
                            UserMobile = "09227204305",
                            UserModifyDate = new DateTime(2020, 3, 27, 18, 32, 59, 530, DateTimeKind.Local).AddTicks(1356),
                            UserName = "Mahdi",
                            UserRoleId = 1
                        });
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblUserPermission", b =>
                {
                    b.Property<int>("UpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UP_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("UpCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UP_CreateDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("UpGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UP_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("UpIsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UP_IsActive")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("UpIsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UP_IsDelete")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("UpModifyDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UP_ModifyDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UpPermissionId")
                        .HasColumnName("UP_PermissionID")
                        .HasColumnType("int");

                    b.Property<int>("UpUserId")
                        .HasColumnName("UP_UserID")
                        .HasColumnType("int");

                    b.HasKey("UpId");

                    b.HasIndex("UpPermissionId");

                    b.HasIndex("UpUserId");

                    b.ToTable("Tbl_UserPermission");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblUserToken", b =>
                {
                    b.Property<int>("UtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UT_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("UtExpireDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UT_ExpireDate")
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("UtGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UT_Guid")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("UtToken")
                        .HasColumnName("UT_Token")
                        .HasColumnType("int");

                    b.Property<int>("UtUserId")
                        .HasColumnName("UT_UserID")
                        .HasColumnType("int");

                    b.HasKey("UtId");

                    b.HasIndex("UtUserId");

                    b.ToTable("Tbl_UserToken");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblAdvertisement", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.TblDocument", "AdvertisementDocument")
                        .WithMany("TblAdvertisement")
                        .HasForeignKey("AdvertisementDocumentId")
                        .HasConstraintName("FK_Tbl_Advertisement_Tbl_Document")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblCategory", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.TblCategory", "CategoryCategoryGu")
                        .WithMany("InverseCategoryCategoryGu")
                        .HasForeignKey("CategoryCategoryGuid")
                        .HasConstraintName("FK_Tbl_Category_Tbl_Category");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblCategoryTag", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.TblCategory", "CtCategoryGu")
                        .WithMany("TblCategoryTag")
                        .HasForeignKey("CtCategoryGuid")
                        .HasConstraintName("FK_Tbl_CategoryTag_Tbl_Category")
                        .IsRequired();

                    b.HasOne("Pisheyar.Domain.Entities.TblTag", "CtTag")
                        .WithMany("TblCategoryTag")
                        .HasForeignKey("CtTagId")
                        .HasConstraintName("FK_Tbl_CategoryTag_Tbl_Tag")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblCodeGroup", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.TblCode", "CgCode")
                        .WithMany("TblCodeGroup")
                        .HasForeignKey("CgCodeId")
                        .HasConstraintName("FK_Tbl_CodeGroup_Tbl_Code")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblComment", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.TblUser", "CommentUser")
                        .WithMany("TblComment")
                        .HasForeignKey("CommentUserId")
                        .HasConstraintName("FK_Tbl_Comment_Tbl_User")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblDocument", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.TblCode", "DocumentTypeCode")
                        .WithMany("TblDocument")
                        .HasForeignKey("DocumentTypeCodeId")
                        .HasConstraintName("FK_Tbl_Document_Tbl_Code")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblPost", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.TblDocument", "PostDocument")
                        .WithMany("TblPost")
                        .HasForeignKey("PostDocumentId")
                        .HasConstraintName("FK_Tbl_Post_Tbl_Document");

                    b.HasOne("Pisheyar.Domain.Entities.TblUser", "PostUser")
                        .WithMany("TblPost")
                        .HasForeignKey("PostUserId")
                        .HasConstraintName("FK_Tbl_Post_Tbl_User")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblPostCategory", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.TblCategory", "PcCategoryGu")
                        .WithMany("TblPostCategory")
                        .HasForeignKey("PcCategoryGuid")
                        .HasConstraintName("FK_Tbl_PostCategory_Tbl_Category")
                        .IsRequired();

                    b.HasOne("Pisheyar.Domain.Entities.TblPost", "PcPost")
                        .WithMany("TblPostCategory")
                        .HasForeignKey("PcPostId")
                        .HasConstraintName("FK_Tbl_PostCategory_Tbl_Post")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblPostComment", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.TblComment", "PcComment")
                        .WithMany("TblPostComment")
                        .HasForeignKey("PcCommentId")
                        .HasConstraintName("FK_Tbl_PostComment_Tbl_Comment")
                        .IsRequired();

                    b.HasOne("Pisheyar.Domain.Entities.TblPost", "PcPost")
                        .WithMany("TblPostComment")
                        .HasForeignKey("PcPostId")
                        .HasConstraintName("FK_Tbl_PostComment_Tbl_Post")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblPostTag", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.TblPost", "PtPost")
                        .WithMany("TblPostTag")
                        .HasForeignKey("PtPostId")
                        .HasConstraintName("FK_Tbl_PostTag_Tbl_Post")
                        .IsRequired();

                    b.HasOne("Pisheyar.Domain.Entities.TblTag", "PtTag")
                        .WithMany("TblPostTag")
                        .HasForeignKey("PtTagId")
                        .HasConstraintName("FK_Tbl_PostTag_Tbl_Tag")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblRolePermission", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.TblPermission", "RpPermission")
                        .WithMany("TblRolePermission")
                        .HasForeignKey("RpPermissionId")
                        .HasConstraintName("FK_Tbl_RolePermission_Tbl_Permission")
                        .IsRequired();

                    b.HasOne("Pisheyar.Domain.Entities.TblRole", "RpRole")
                        .WithMany("TblRolePermission")
                        .HasForeignKey("RpRoleId")
                        .HasConstraintName("FK_Tbl_RolePermission_Tbl_Role")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblSmsproviderNumber", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.TblSmsproviderConfiguration", "SpnSpc")
                        .WithMany("TblSmsproviderNumber")
                        .HasForeignKey("SpnSpcid")
                        .HasConstraintName("FK_Tbl_SMSProviderNumber_Tbl_SMSProviderConfiguration")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblSmsresponse", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.TblSmstemplate", "SmsSt")
                        .WithMany("TblSmsresponse")
                        .HasForeignKey("SmsStid")
                        .HasConstraintName("FK_Tbl_SMSResponse_Tbl_SMSTemplate");

                    b.HasOne("Pisheyar.Domain.Entities.TblUser", "SmsUser")
                        .WithMany("TblSmsresponse")
                        .HasForeignKey("SmsUserId")
                        .HasConstraintName("FK_Tbl_SMSResponse_Tbl_User");
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblSmssetting", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.TblSmsproviderConfiguration", "SsSpc")
                        .WithMany("TblSmssetting")
                        .HasForeignKey("SsSpcid")
                        .HasConstraintName("FK_Tbl_SMSSetting_Tbl_SMSProviderConfiguration")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblSmstemplate", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.TblSmssetting", "StSs")
                        .WithMany("TblSmstemplate")
                        .HasForeignKey("StSsid")
                        .HasConstraintName("FK_Tbl_SMSTemplate_Tbl_SMSSetting")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblUser", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.TblRole", "UserRole")
                        .WithMany("TblUser")
                        .HasForeignKey("UserRoleId")
                        .HasConstraintName("FK_Tbl_User_Tbl_Role")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblUserPermission", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.TblPermission", "UpPermission")
                        .WithMany("TblUserPermission")
                        .HasForeignKey("UpPermissionId")
                        .HasConstraintName("FK_Tbl_UserPermission_Tbl_Permission")
                        .IsRequired();

                    b.HasOne("Pisheyar.Domain.Entities.TblUser", "UpUser")
                        .WithMany("TblUserPermission")
                        .HasForeignKey("UpUserId")
                        .HasConstraintName("FK_Tbl_UserPermission_Tbl_User")
                        .IsRequired();
                });

            modelBuilder.Entity("Pisheyar.Domain.Entities.TblUserToken", b =>
                {
                    b.HasOne("Pisheyar.Domain.Entities.TblUser", "UtUser")
                        .WithMany("TblUserToken")
                        .HasForeignKey("UtUserId")
                        .HasConstraintName("FK_Tbl_UserToken_Tbl_User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
